{"version":3,"sources":["Covid19/Covid19EventType.ts","AreaData/AreaDataStatus.ts","Covid19/Covid19Context.ts","Covid19/Covid19State.ts","AreaData/AreaDataRejectedEvent.ts","CoronovirusDataGovUkApi/LowerTierLocalAuthorityAreaName.ts","AreaData/AreaDataRequestedEvent.ts","AreaData/AreaDataResolvedEvent.ts","TimeFrame/TimeFrameChangedEvent.ts","Covid19/Covid19Event.ts","DataNode/Node.tsx","CoronovirusDataGovUkApi/CoronovirusDataGovUkEnvironment.ts","TimeFrame/useTimeFrame.ts","config.ts","CoronovirusDataGovUkApi/DataApi.ts","AreaData/Covid19AreaData.ts","TimeFrame/TimeFrameControl.tsx","DataNode/NewCasesBySpecimenDateDataNode.tsx","DataNode/NoDataNode.tsx","DataNode/GreaterManchesterDataNodeCanvas.tsx","App.tsx","index.tsx"],"names":["Covid19EventType","AreaDataStatus","DEFAULT_COVID_19_CONTEXT_VALUE","dispatch","Error","state","timeFrame","data","Covid19Context","createContext","useCovid19Dispatch","useContext","useCovid19State","LowerTierLocalAuthorityAreaName","AreaDataRejectedEvent","area","type","AREA_DATA_REJECTED","this","handleAreaDataRejectedEvent","event","status","ERROR","AreaDataRequestedEvent","AREA_DATA_REQUESTED","handleAreaDataRequestedEvent","FETCHING","AreaDataResolvedEvent","AREA_DATA_RESOLVED","handleAreaDataResolvedEvent","COMPLETE","TimeFrameChangedEvent","TIME_FRAME_CHANGED","handleTimeFrameChangedEvent","handleCovid19Event","undefined","CoronovirusDataGovUkEnvironment","Node","backgroundColor","datum","className","style","borderBottomColor","data-testid","borderTopColor","fontSize","Math","min","useTimeFrame","getCoronovirusDataGovUkEnvironment","PRODUCTION","DATA_URL","STAGING_URL","getLowerTierLocalAuthorityNewCasesBySpecimanDate","areaName","a","baseUrl","url","fetch","response","json","BASE_DATE_TIME","Date","UTC","TimeFrameControl","daysSinceBaseDate","floor","now","MILLIS_PER_SECOND","toISOString","substring","aria-label","onChange","e","preventDefault","parseInt","target","value","max","autoFocus","NewCasesBySpecimenDateDataNode","covid19Dispatch","covid19State","useEffect","useCovid19AreaData","useMemo","date","find","d","newCasesBySpecimenDate","color","NoDataNode","GreaterManchesterNodeCanvas","Bolton","Rochdale","Wigan","Bury","Salford","Oldham","Manchester","Tameside","Trafford","Stockport","App","useReducer","covid19Context","textAlign","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fc0e728.chunk.js","sourcesContent":["export enum Covid19EventType {\n    AREA_DATA_REQUESTED,\n    AREA_DATA_REJECTED,\n    AREA_DATA_RESOLVED,\n    TIME_FRAME_CHANGED,\n}","export enum AreaDataStatus {\n    FETCHING,\n    COMPLETE,\n    ERROR,\n};","import { createContext, Dispatch, useContext } from \"react\";\nimport { Covid19Event } from './Covid19Event';\nimport { Covid19State, createDefaultCovid19State } from './Covid19State';\n\ninterface Covid19ContextValue { \n    dispatch: Dispatch<Covid19Event>;\n    state: Covid19State;\n};\n\nconst DEFAULT_COVID_19_CONTEXT_VALUE: Covid19ContextValue = {\n    dispatch: () => {\n        throw new Error('Create Covid19Context dispatch with useReducer');\n    },\n    state: createDefaultCovid19State(),\n}\n\nexport const Covid19Context = createContext<Covid19ContextValue>(DEFAULT_COVID_19_CONTEXT_VALUE);\n\nexport const useCovid19Dispatch = () => {\n    const { dispatch } = useContext(Covid19Context);\n    return dispatch;\n}\n\nexport const useCovid19State = () => {\n    const { state } = useContext(Covid19Context);\n    return state;\n}","import { AreaDataStatus } from '../AreaData/AreaDataStatus';\nimport { NewCasesBySpecimenDateDatum } from \"../CoronovirusDataGovUkApi/NewCasesBySpecimenDateDatum\";\n\nexport interface Covid19State {\n    timeFrame: number;\n    data: {\n        [key: string]: {\n            status: AreaDataStatus;\n            data?: NewCasesBySpecimenDateDatum[];\n        };\n    };\n}\n\nexport const createDefaultCovid19State = () => ({\n    timeFrame: 0,\n    data: {}\n});","import { Covid19EventType } from '../Covid19/Covid19EventType';\nimport { Covid19State } from '../Covid19/Covid19State';\nimport { LowerTierLocalAuthorityAreaName } from '../CoronovirusDataGovUkApi/LowerTierLocalAuthorityAreaName';\nimport { AreaDataStatus } from './AreaDataStatus';\n\nexport class AreaDataRejectedEvent {\n    readonly type = Covid19EventType.AREA_DATA_REJECTED;\n    readonly area: LowerTierLocalAuthorityAreaName;\n\n    constructor(area: LowerTierLocalAuthorityAreaName) {\n        this.area = area;\n    }\n}\n\nexport const handleAreaDataRejectedEvent = (state: Covid19State, event: AreaDataRejectedEvent): Covid19State => {\n    return {\n        ...state,\n        data: {\n            ...state.data,\n            [event.area]: {\n                status: AreaDataStatus.ERROR,\n            },\n        },\n    };\n}","export enum LowerTierLocalAuthorityAreaName {\n    Bolton = 'Bolton',\n    Bury = 'Bury',\n    Manchester = 'Manchester',\n    Oldham = 'Oldham',\n    Rochdale = 'Rochdale',\n    Salford = 'Salford',\n    Stockport = 'Stockport',\n    Tameside = 'Tameside',\n    Trafford = 'Trafford',\n    Wigan = 'Wigan',\n}","import { Covid19EventType } from '../Covid19/Covid19EventType';\nimport { Covid19State } from '../Covid19/Covid19State';\nimport { LowerTierLocalAuthorityAreaName } from '../CoronovirusDataGovUkApi/LowerTierLocalAuthorityAreaName';\nimport { AreaDataStatus } from './AreaDataStatus';\n\nexport class AreaDataRequestedEvent {\n    readonly type = Covid19EventType.AREA_DATA_REQUESTED;\n    readonly area: LowerTierLocalAuthorityAreaName;\n\n    constructor(area: LowerTierLocalAuthorityAreaName) {\n        this.area = area;\n    }\n}\n\nexport const handleAreaDataRequestedEvent = (state: Covid19State, event: AreaDataRequestedEvent): Covid19State => {\n    return {\n        ...state,\n        data: {\n            ...state.data,\n            [event.area]: {\n                status: AreaDataStatus.FETCHING,\n            },\n        },\n    };\n}","import { NewCasesBySpecimenDateDatum } from '../CoronovirusDataGovUkApi/NewCasesBySpecimenDateDatum';\nimport { Covid19EventType } from '../Covid19/Covid19EventType';\nimport { Covid19State } from '../Covid19/Covid19State';\nimport { LowerTierLocalAuthorityAreaName } from '../CoronovirusDataGovUkApi/LowerTierLocalAuthorityAreaName';\nimport { AreaDataStatus } from './AreaDataStatus';\n\nexport class AreaDataResolvedEvent {\n    readonly type = Covid19EventType.AREA_DATA_RESOLVED;\n    readonly area: LowerTierLocalAuthorityAreaName;\n    readonly data: NewCasesBySpecimenDateDatum[];\n\n    constructor(area: LowerTierLocalAuthorityAreaName, data: NewCasesBySpecimenDateDatum[]) {\n        this.area = area;\n        this.data = data;\n    }\n}\n\nexport const handleAreaDataResolvedEvent = (state: Covid19State, event: AreaDataResolvedEvent): Covid19State => {\n    return {\n        ...state,\n        data: {\n            ...state.data,\n            [event.area]: {\n                status: AreaDataStatus.COMPLETE,\n                data: event.data,\n            },\n        },\n    };\n}","import { Covid19EventType } from '../Covid19/Covid19EventType';\nimport { Covid19State } from '../Covid19/Covid19State';\n\nexport class TimeFrameChangedEvent {\n    readonly type = Covid19EventType.TIME_FRAME_CHANGED;\n    readonly timeFrame: number;\n\n    constructor(timeFrame: number) {\n        this.timeFrame = timeFrame;\n    }\n}\n\nexport const handleTimeFrameChangedEvent = (state: Covid19State, event: TimeFrameChangedEvent): Covid19State => {\n    return {\n        ...state,\n        timeFrame: event.timeFrame,\n    };\n}","import { AreaDataRejectedEvent, handleAreaDataRejectedEvent } from '../AreaData/AreaDataRejectedEvent';\nimport { AreaDataRequestedEvent, handleAreaDataRequestedEvent } from '../AreaData/AreaDataRequestedEvent';\nimport { AreaDataResolvedEvent, handleAreaDataResolvedEvent } from '../AreaData/AreaDataResolvedEvent';\nimport { handleTimeFrameChangedEvent, TimeFrameChangedEvent } from '../TimeFrame/TimeFrameChangedEvent';\nimport { Covid19EventType } from './Covid19EventType';\nimport { createDefaultCovid19State, Covid19State } from './Covid19State';\n\nexport type Covid19Event =\n    TimeFrameChangedEvent |\n    AreaDataRequestedEvent |\n    AreaDataResolvedEvent |\n    AreaDataRejectedEvent;\n\nexport const handleCovid19Event = (state = createDefaultCovid19State(), event?: Covid19Event): Covid19State => {\n    if (event === undefined) {\n        return state;\n    }\n\n    switch (event.type) {\n        case Covid19EventType.AREA_DATA_REQUESTED: return handleAreaDataRequestedEvent(state, event);\n        case Covid19EventType.AREA_DATA_REJECTED: return handleAreaDataRejectedEvent(state, event);\n        case Covid19EventType.AREA_DATA_RESOLVED: return handleAreaDataResolvedEvent(state, event);\n        case Covid19EventType.TIME_FRAME_CHANGED: return handleTimeFrameChangedEvent(state, event);\n        default: return state;\n    };\n}","import React from 'react';\nimport { LowerTierLocalAuthorityAreaName } from '../CoronovirusDataGovUkApi/LowerTierLocalAuthorityAreaName';\n\ninterface NodeProps {\n    backgroundColor?: string;\n    area?: LowerTierLocalAuthorityAreaName;\n    datum?: number;\n}\n\nexport const Node = ({ backgroundColor = 'transparent', area, datum }: NodeProps) => {\n    return (\n        <div className='node'>\n            <div className='node-top' style={{ borderBottomColor: backgroundColor }} data-testid='node-top' ></div>\n            <div className='node-bottom' style={{ borderTopColor: backgroundColor }} data-testid='node-bottom'></div>\n            { (area !== undefined) && (<div className='node-title'>{area}</div>) }\n            { (datum !== undefined) && (<div className='node-datum' style={{fontSize:`${Math.min(datum ^ 2, 30)}px`}}>{datum}</div>)}\n        </div>\n    );\n}\n\n\n\n\n","export enum CoronovirusDataGovUkEnvironment {\n    PRODUCTION,\n    STAGING,\n}","import { useCovid19State } from '../Covid19/Covid19Context';\n\nexport const useTimeFrame = () => {\n    const state = useCovid19State();\n    return state.timeFrame;\n};","import { CoronovirusDataGovUkEnvironment } from './CoronovirusDataGovUkApi/CoronovirusDataGovUkEnvironment';\n\nexport const getCoronovirusDataGovUkEnvironment = (): CoronovirusDataGovUkEnvironment => {\n    return CoronovirusDataGovUkEnvironment.PRODUCTION;\n}","import { CoronovirusDataGovUkEnvironment } from './CoronovirusDataGovUkEnvironment';\nimport { LowerTierLocalAuthorityAreaName } from \"./LowerTierLocalAuthorityAreaName\";\nimport { NewCasesBySpecimenDateDatum } from './NewCasesBySpecimenDateDatum';\nimport { getCoronovirusDataGovUkEnvironment } from '../config';\n\nconst DATA_URL = 'https://api.coronavirus.data.gov.uk/v1/data';\nconst STAGING_URL = 'https://api.coronavirus-staging.data.gov.uk/v1/data';\n\ninterface NewCasesBySpecimanDateResponseBody {\n    length: number;\n    maxPageLimit: number;\n    data: NewCasesBySpecimenDateDatum[];\n}\n\nexport async function getLowerTierLocalAuthorityNewCasesBySpecimanDate(areaName: LowerTierLocalAuthorityAreaName): Promise<NewCasesBySpecimenDateDatum[]> {\n    const baseUrl = getCoronovirusDataGovUkEnvironment() === CoronovirusDataGovUkEnvironment.PRODUCTION ?\n        DATA_URL :\n        STAGING_URL;\n    const url = `${baseUrl}?filters=areaType=ltla;areaName=${areaName}&structure={\"date\":\"date\",\"newCasesBySpecimenDate\":\"newCasesBySpecimenDate\"}`;\n    const response = await fetch(url);\n    const { data }: NewCasesBySpecimanDateResponseBody = await response.json();\n    return data;\n}","import { useEffect } from 'react';\nimport { getLowerTierLocalAuthorityNewCasesBySpecimanDate } from '../CoronovirusDataGovUkApi/DataApi';\nimport { LowerTierLocalAuthorityAreaName } from '../CoronovirusDataGovUkApi/LowerTierLocalAuthorityAreaName';\nimport { useCovid19Dispatch, useCovid19State } from '../Covid19/Covid19Context';\nimport { AreaDataRejectedEvent } from './AreaDataRejectedEvent';\nimport { AreaDataRequestedEvent } from './AreaDataRequestedEvent';\nimport { AreaDataResolvedEvent } from './AreaDataResolvedEvent';\nimport { AreaDataStatus } from './AreaDataStatus';\n\nexport const useCovid19AreaData = (area: LowerTierLocalAuthorityAreaName) => {\n    const covid19Dispatch = useCovid19Dispatch();\n    const covid19State = useCovid19State();\n\n    useEffect(() => {\n        covid19Dispatch(new AreaDataRequestedEvent(area));\n        (async function () {\n            try {\n                const data = await getLowerTierLocalAuthorityNewCasesBySpecimanDate(area);\n                covid19Dispatch(new AreaDataResolvedEvent(area, data));\n            }\n            catch (e: unknown) {\n                covid19Dispatch(new AreaDataRejectedEvent(area));\n            }\n        })();\n    }, [area, covid19Dispatch]);\n\n    return {\n        status: covid19State.data[area]?.status || AreaDataStatus.FETCHING,\n        data: covid19State.data[area]?.data || [],\n    };\n}","import React, { ChangeEvent } from 'react';\nimport { useCovid19Dispatch } from '../Covid19/Covid19Context';\nimport { TimeFrameChangedEvent } from './TimeFrameChangedEvent';\nimport { useTimeFrame } from './useTimeFrame';\n\nconst MILLIS_PER_SECOND = 1000;\nconst SECONDS_PER_MINUTE = 60;\nconst MINUTES_PER_HOUR = 60;\nconst HOURS_PER_DAY = 24;\n\nexport const BASE_DATE_TIME = Date.UTC(2020, 2, 1);\n\nexport const MILLIS_PER_DAY = MILLIS_PER_SECOND * SECONDS_PER_MINUTE * MINUTES_PER_HOUR * HOURS_PER_DAY;\n\nexport const TimeFrameControl = () => {\n\n    const dispatch = useCovid19Dispatch();\n    const timeFrame = useTimeFrame();\n    const daysSinceBaseDate = Math.floor((Date.now() - BASE_DATE_TIME) / MILLIS_PER_DAY);\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        dispatch(new TimeFrameChangedEvent(parseInt(e.target.value)));\n    };\n\n    return (<div className='time-frame-control'>\n        <div>{new Date(BASE_DATE_TIME + (timeFrame * MILLIS_PER_DAY)).toISOString().substring(0, 10)}</div>\n        <input type='range' aria-label='input-range' onChange={onChange} value={timeFrame} min='0' max={daysSinceBaseDate} autoFocus/>\n    </div>);\n}","import React, { useMemo } from 'react';\nimport { Node } from './Node';\nimport { LowerTierLocalAuthorityAreaName } from '../CoronovirusDataGovUkApi/LowerTierLocalAuthorityAreaName';\nimport { AreaDataStatus } from '../AreaData/AreaDataStatus';\nimport { useTimeFrame } from '../TimeFrame/useTimeFrame';\nimport { useCovid19AreaData } from '../AreaData/Covid19AreaData';\nimport { BASE_DATE_TIME, MILLIS_PER_DAY } from '../TimeFrame/TimeFrameControl';\n\ninterface NewCasesBySpecimenDateDataNodeProps {\n    area: LowerTierLocalAuthorityAreaName;\n}\n\nexport const NewCasesBySpecimenDateDataNode = ({ area }: NewCasesBySpecimenDateDataNodeProps) => {\n    const { status, data } = useCovid19AreaData(area);\n    const timeFrame = useTimeFrame();\n\n    const datum = useMemo(() => {\n        const date = new Date(BASE_DATE_TIME + (timeFrame * MILLIS_PER_DAY)).toISOString().substring(0, 10);\n        return data.find(d => d.date === date)?.newCasesBySpecimenDate;\n    }, [data, timeFrame]);\n\n    const color = useMemo(() => {\n        if (status === AreaDataStatus.FETCHING) {\n            return '#eef';\n        } else if (status === AreaDataStatus.ERROR) {\n            return '#fee';\n        } else if (datum === undefined) {\n            return '#eee';\n        }\n        else {\n            return `rgb(255, ${Math.max(0, 255 - (datum ^ 2))}, ${Math.max(0, 255 - (datum ^ 2))})`;\n        }\n    }, [status, datum])\n\nreturn (<Node backgroundColor={color} area={area} datum={datum}/>)\n};","import React from 'react';\nimport { Node } from './Node';\n\nexport const NoDataNode = () => (<Node />);","import React from 'react';\nimport { LowerTierLocalAuthorityAreaName } from '../CoronovirusDataGovUkApi/LowerTierLocalAuthorityAreaName';\nimport { NewCasesBySpecimenDateDataNode } from './NewCasesBySpecimenDateDataNode';\nimport { NoDataNode } from './NoDataNode';\n\nexport const GreaterManchesterNodeCanvas = () => {\n    return (<div className='node-canvas'>\n        <div className='node-row'>\n            <NoDataNode />\n        </div>\n        <div className='node-row'>\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Bolton} />\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Rochdale} />\n            <NoDataNode />\n        </div>\n        <div className='node-row'>\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Wigan} />\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Bury} />\n            <NoDataNode />\n        </div>\n        <div className='node-row'>\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Salford} />\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Oldham} />\n            <NoDataNode />\n        </div>\n        <div className='node-row'>\n            <NoDataNode />\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Manchester} />\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Tameside} />\n        </div>\n        <div className='node-row'>\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Trafford} />\n            <NewCasesBySpecimenDateDataNode area={LowerTierLocalAuthorityAreaName.Stockport} />\n            <NoDataNode />\n        </div>\n        <div className='node-row'>\n            <NoDataNode />\n        </div>\n    </div>);\n};\n","import React, { useMemo, useReducer } from 'react';\nimport './App.scss';\nimport { Covid19Context } from './Covid19/Covid19Context';\nimport { handleCovid19Event } from './Covid19/Covid19Event';\nimport { createDefaultCovid19State } from './Covid19/Covid19State';\nimport { GreaterManchesterNodeCanvas } from './DataNode/GreaterManchesterDataNodeCanvas';\nimport { TimeFrameControl } from './TimeFrame/TimeFrameControl';\n\nconst App = () => {\n\n  const [covid19State, covid19Dispatch] = useReducer(handleCovid19Event, createDefaultCovid19State());\n\n  const covid19Context = useMemo(() => ({\n    dispatch: covid19Dispatch,\n    state: covid19State,\n  }), [covid19Dispatch, covid19State]);\n\n  return (\n    <div className=\"App\" style={{ textAlign: 'center' }}>\n      <Covid19Context.Provider value={covid19Context}>\n        <GreaterManchesterNodeCanvas />\n        <TimeFrameControl />\n      </Covid19Context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}